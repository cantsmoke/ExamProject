/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.examproject.GUI;

import com.mycompany.examproject.GUIandLogicIntermediary;
import com.mycompany.examproject.Player;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/**
 *
 * @author Arseniy
 */
public class UpgradeMenu extends javax.swing.JFrame {

    /**
     * Creates new form UpgradeMenu
     */
    public UpgradeMenu() {
        getContentPane().setBackground(Color.BLACK);
        initComponents();
        updateLabels();
        setLocationRelativeTo(null);
        
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                closeButtonAction();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentStrengthLabel1 = new javax.swing.JLabel();
        upgradeMenuPanel = new javax.swing.JPanel();
        currentSoulsAmountLabel = new javax.swing.JLabel();
        agilityIconLabel = new javax.swing.JLabel();
        enduranceIconLabel = new javax.swing.JLabel();
        strenghtIconLabel = new javax.swing.JLabel();
        currentStrengthLabel = new javax.swing.JLabel();
        currentAgilityLabel = new javax.swing.JLabel();
        currentEnduranceLabel = new javax.swing.JLabel();
        upgradeStrengthButton = new javax.swing.JButton();
        upgradeAgilityButton = new javax.swing.JButton();
        upgradeEnduranceButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        counterAttackButton = new javax.swing.JButton();
        specialAbilitiesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        counterAttackDescriptionArea = new javax.swing.JTextArea();

        currentStrengthLabel1.setFont(new java.awt.Font("Castellar", 0, 14)); // NOI18N
        currentStrengthLabel1.setForeground(new java.awt.Color(204, 204, 204));
        currentStrengthLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        upgradeMenuPanel.setBackground(new java.awt.Color(0, 0, 0));

        currentSoulsAmountLabel.setFont(new java.awt.Font("Castellar", 0, 18)); // NOI18N
        currentSoulsAmountLabel.setForeground(new java.awt.Color(204, 204, 204));
        currentSoulsAmountLabel.setText("jLabel1");

        agilityIconLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arseniy\\Downloads\\ChatGPT Image 14 июн. 2025 г., 10_34_18.png")); // NOI18N
        agilityIconLabel.setBorder(new AntiqueBorder());

        enduranceIconLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arseniy\\Downloads\\ChatGPT Image 14 июн. 2025 г., 10_41_46.png")); // NOI18N
        enduranceIconLabel.setBorder(new AntiqueBorder());

        strenghtIconLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Arseniy\\Downloads\\ChatGPT Image 14 июн. 2025 г., 10_28_48.png")); // NOI18N
        strenghtIconLabel.setBorder(new AntiqueBorder());

        currentStrengthLabel.setFont(new java.awt.Font("Castellar", 0, 14)); // NOI18N
        currentStrengthLabel.setForeground(new java.awt.Color(204, 204, 204));
        currentStrengthLabel.setText("jLabel1");

        currentAgilityLabel.setFont(new java.awt.Font("Castellar", 0, 14)); // NOI18N
        currentAgilityLabel.setForeground(new java.awt.Color(204, 204, 204));
        currentAgilityLabel.setText("jLabel1");

        currentEnduranceLabel.setFont(new java.awt.Font("Castellar", 0, 14)); // NOI18N
        currentEnduranceLabel.setForeground(new java.awt.Color(204, 204, 204));
        currentEnduranceLabel.setText("jLabel1");

        upgradeStrengthButton.setBackground(new java.awt.Color(102, 102, 102));
        upgradeStrengthButton.setFont(new java.awt.Font("Castellar", 0, 10)); // NOI18N
        upgradeStrengthButton.setForeground(new java.awt.Color(204, 204, 204));
        upgradeStrengthButton.setText("jButton1");
        upgradeStrengthButton.setBorder(null);
        upgradeStrengthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradeStrengthButtonActionPerformed(evt);
            }
        });

        upgradeAgilityButton.setBackground(new java.awt.Color(102, 102, 102));
        upgradeAgilityButton.setFont(new java.awt.Font("Castellar", 0, 10)); // NOI18N
        upgradeAgilityButton.setForeground(new java.awt.Color(204, 204, 204));
        upgradeAgilityButton.setText("jButton2");
        upgradeAgilityButton.setBorder(null);
        upgradeAgilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradeAgilityButtonActionPerformed(evt);
            }
        });

        upgradeEnduranceButton.setBackground(new java.awt.Color(102, 102, 102));
        upgradeEnduranceButton.setFont(new java.awt.Font("Castellar", 0, 10)); // NOI18N
        upgradeEnduranceButton.setForeground(new java.awt.Color(204, 204, 204));
        upgradeEnduranceButton.setText("jButton3");
        upgradeEnduranceButton.setBorder(null);
        upgradeEnduranceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradeEnduranceButtonActionPerformed(evt);
            }
        });

        closeButton.setBackground(new java.awt.Color(102, 102, 102));
        closeButton.setFont(new java.awt.Font("Castellar", 0, 14)); // NOI18N
        closeButton.setForeground(new java.awt.Color(204, 204, 204));
        closeButton.setText("Close");
        closeButton.setBorder(null);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        counterAttackButton.setBackground(new java.awt.Color(102, 102, 102));
        counterAttackButton.setFont(new java.awt.Font("Castellar", 0, 12)); // NOI18N
        counterAttackButton.setForeground(new java.awt.Color(204, 204, 204));
        counterAttackButton.setText("jButton1");
        counterAttackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counterAttackButtonActionPerformed(evt);
            }
        });

        specialAbilitiesLabel.setFont(new java.awt.Font("Castellar", 0, 18)); // NOI18N
        specialAbilitiesLabel.setForeground(new java.awt.Color(204, 204, 204));
        specialAbilitiesLabel.setText("Special abilities:");

        counterAttackDescriptionArea.setBackground(new java.awt.Color(0, 0, 0));
        counterAttackDescriptionArea.setColumns(20);
        counterAttackDescriptionArea.setFont(new java.awt.Font("Yu Mincho Light", 0, 12)); // NOI18N
        counterAttackDescriptionArea.setForeground(new java.awt.Color(204, 204, 204));
        counterAttackDescriptionArea.setLineWrap(true);
        counterAttackDescriptionArea.setRows(5);
        counterAttackDescriptionArea.setText("If you successfully block an enemy attack, you automatically deal a counterattack, which deals 20 to 30 percent of your light attack damage. Note that a counterattack costs 5 stamina points and spends them accordingly. You also won't be able to counterattack if your equipment weight is one and a half times your tolerable weight.");
        counterAttackDescriptionArea.setWrapStyleWord(true);
        counterAttackDescriptionArea.setEnabled(false);
        jScrollPane1.setViewportView(counterAttackDescriptionArea);

        javax.swing.GroupLayout upgradeMenuPanelLayout = new javax.swing.GroupLayout(upgradeMenuPanel);
        upgradeMenuPanel.setLayout(upgradeMenuPanelLayout);
        upgradeMenuPanelLayout.setHorizontalGroup(
            upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upgradeMenuPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(upgradeStrengthButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(strenghtIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(agilityIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(upgradeAgilityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(enduranceIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(upgradeEnduranceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(counterAttackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(specialAbilitiesLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(currentSoulsAmountLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentStrengthLabel)
                            .addComponent(currentAgilityLabel)
                            .addComponent(currentEnduranceLabel))
                        .addGap(0, 266, Short.MAX_VALUE)))
                .addContainerGap())
        );
        upgradeMenuPanelLayout.setVerticalGroup(
            upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                            .addGap(81, 81, 81)
                            .addComponent(currentStrengthLabel)
                            .addGap(18, 18, 18)
                            .addComponent(currentAgilityLabel)
                            .addGap(18, 18, 18)
                            .addComponent(currentEnduranceLabel))
                        .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                            .addGap(81, 81, 81)
                            .addComponent(enduranceIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upgradeMenuPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(agilityIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(currentSoulsAmountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(strenghtIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(upgradeEnduranceButton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(upgradeAgilityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upgradeStrengthButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(upgradeMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                        .addComponent(specialAbilitiesLabel)
                        .addGap(18, 18, 18)
                        .addComponent(counterAttackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(upgradeMenuPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upgradeMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upgradeMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
        GUIandLogicIntermediary.showNavigationForm();
    }//GEN-LAST:event_closeButtonActionPerformed

    public void closeButtonAction() {                                            
        this.dispose();
        GUIandLogicIntermediary.showNavigationForm();
    }
    
    private void upgradeStrengthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradeStrengthButtonActionPerformed
        Player.getInstance().boostStrength(requiredSoulsStrength);
        requiredSoulsStrength += 25;
        updateLabels();
    }//GEN-LAST:event_upgradeStrengthButtonActionPerformed

    private void upgradeAgilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradeAgilityButtonActionPerformed
        Player.getInstance().boostAgility(requiredSoulsAgility);
        requiredSoulsAgility += 25;
        updateLabels();
    }//GEN-LAST:event_upgradeAgilityButtonActionPerformed

    private void upgradeEnduranceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradeEnduranceButtonActionPerformed
        Player.getInstance().boostEndurance(requiredSoulsEndurance);
        requiredSoulsEndurance += 25;
        updateLabels();
    }//GEN-LAST:event_upgradeEnduranceButtonActionPerformed

    private void counterAttackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counterAttackButtonActionPerformed
        Player.getInstance().unlockCounterAttack(requiredSoulsCounterAttack);
        updateLabels();
    }//GEN-LAST:event_counterAttackButtonActionPerformed
    
    private void updateLabels() {
        currentSoulsAmountLabel.setText("Your current souls amount is " + Player.getInstance().getCurrentSoulsAmount() + "!");
        
        currentStrengthLabel.setText("Your current strength level: " + Player.getInstance().getStrength() + "/10");
        currentAgilityLabel.setText("Your current agility level: " + Player.getInstance().getAgility() + "/10");
        currentEnduranceLabel.setText("Your current endurance level: " + Player.getInstance().getEndurance() + "/10");
        
        if (Player.getInstance().getStrength() != 10){
            upgradeStrengthButton.setText("Boost strength; Souls required: " + requiredSoulsStrength);
        } else {
            upgradeStrengthButton.setText("Strength is maxed out!");
        }
        
        if(Player.getInstance().getAgility() != 10){
            upgradeAgilityButton.setText("Boost agility; Souls required: " + requiredSoulsAgility);
        } else {
            upgradeAgilityButton.setText("Agility is maxed out!");
        }
        
        if (Player.getInstance().getEndurance() != 10){
            upgradeEnduranceButton.setText("Boost endurance; Souls required: " + requiredSoulsEndurance);
        } else {
            upgradeEnduranceButton.setText("Endurance is maxed out!");
        }
        
        if(!Player.getInstance().hasCounterAttack()){
            counterAttackButton.setText("Unlock counter attack; Souls required: " + requiredSoulsCounterAttack);
        } else {
            counterAttackButton.setText("You unlocked counter attack!");
        }
        
        updateButtonAvaibility();
    }
    
    private void updateButtonAvaibility() {
        if (Player.getInstance().getCurrentSoulsAmount() < requiredSoulsStrength || Player.getInstance().getStrength() == 10){
            upgradeStrengthButton.setEnabled(false);
        } else {
            upgradeStrengthButton.setEnabled(true);
        }
        if (Player.getInstance().getCurrentSoulsAmount() < requiredSoulsAgility || Player.getInstance().getAgility() == 10){
            upgradeAgilityButton.setEnabled(false);
        } else {
            upgradeAgilityButton.setEnabled(true);
        }
        if (Player.getInstance().getCurrentSoulsAmount() < requiredSoulsEndurance || Player.getInstance().getEndurance() == 10){
            upgradeEnduranceButton.setEnabled(false);
        } else {
            upgradeEnduranceButton.setEnabled(true);
        }
        if (Player.getInstance().getCurrentSoulsAmount() < requiredSoulsCounterAttack || Player.getInstance().hasCounterAttack() == true){
            counterAttackButton.setEnabled(false);
        } else {
            counterAttackButton.setEnabled(true);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agilityIconLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton counterAttackButton;
    private javax.swing.JTextArea counterAttackDescriptionArea;
    private javax.swing.JLabel currentAgilityLabel;
    private javax.swing.JLabel currentEnduranceLabel;
    private javax.swing.JLabel currentSoulsAmountLabel;
    private javax.swing.JLabel currentStrengthLabel;
    private javax.swing.JLabel currentStrengthLabel1;
    private javax.swing.JLabel enduranceIconLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel specialAbilitiesLabel;
    private javax.swing.JLabel strenghtIconLabel;
    private javax.swing.JButton upgradeAgilityButton;
    private javax.swing.JButton upgradeEnduranceButton;
    private javax.swing.JPanel upgradeMenuPanel;
    private javax.swing.JButton upgradeStrengthButton;
    // End of variables declaration//GEN-END:variables

    private int requiredSoulsStrength = 300 + Player.getInstance().getStrength() * 25;
    private int requiredSoulsAgility = 300 + Player.getInstance().getAgility() * 25;
    private int requiredSoulsEndurance = 300 + Player.getInstance().getEndurance() * 25;
    private int requiredSoulsCounterAttack = 2500;
}