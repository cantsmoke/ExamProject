/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.examproject.GUI;

import com.mycompany.examproject.GUIandLogicIntermediary;
import com.mycompany.examproject.Map.CastleMapGenerator;
import com.mycompany.examproject.Map.Floor;
import com.mycompany.examproject.Map.Room;
import com.mycompany.examproject.Player;
import java.awt.Color;
import java.awt.Graphics;
import javax.swing.ImageIcon;

/**
 *
 * @author Arseniy
 */
public class StateAndNavigationForm extends javax.swing.JFrame {

    /**
     * Creates new form StateAndNavigationForm
     */
    public StateAndNavigationForm() {
        initComponents();
        getContentPane().setBackground(Color.BLACK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PlayerInfoAndBasicButtonsPanel = new javax.swing.JPanel();
        healthBar = new javax.swing.JProgressBar();
        staminaBar = new javax.swing.JProgressBar();
        inventoryButton = new javax.swing.JButton();
        exitToMainMenuButton = new javax.swing.JButton();
        upgradeMenu = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        playerIconLabel = new javax.swing.JLabel();
        LocationInfoPanel = new javax.swing.JPanel();
        locationImageLabel = new javax.swing.JLabel();
        LocationDescriptionScrollPane = new javax.swing.JScrollPane();
        locationDescriptionArea = new javax.swing.JTextArea();
        NavigationPanel = new javax.swing.JPanel();
        previousFloorButton = new javax.swing.JButton();
        nextFloorButton = new javax.swing.JButton();
        currentFloorLabel = new javax.swing.JLabel();
        moveNorthButton = new javax.swing.JButton();
        moveWestButton = new javax.swing.JButton();
        moveEastButton = new javax.swing.JButton();
        moveSouthButton = new javax.swing.JButton();
        mapPanel = new MapPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));

        PlayerInfoAndBasicButtonsPanel.setBackground(new java.awt.Color(0, 0, 0));

        inventoryButton.setBackground(new java.awt.Color(51, 51, 51));
        inventoryButton.setForeground(new java.awt.Color(255, 255, 255));
        inventoryButton.setText("Инвентарь");
        inventoryButton.setBorder(null);
        inventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryButtonActionPerformed(evt);
            }
        });

        exitToMainMenuButton.setBackground(new java.awt.Color(51, 51, 51));
        exitToMainMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        exitToMainMenuButton.setText("Выйти в главное меню");
        exitToMainMenuButton.setBorder(null);
        exitToMainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitToMainMenuButtonActionPerformed(evt);
            }
        });

        upgradeMenu.setBackground(new java.awt.Color(51, 51, 51));
        upgradeMenu.setForeground(new java.awt.Color(255, 255, 255));
        upgradeMenu.setText("Меню прокачки");
        upgradeMenu.setBorder(null);
        upgradeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upgradeMenuActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(51, 51, 51));
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Сохранить прогресс");
        saveButton.setBorder(null);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        playerIconLabel.setBackground(new java.awt.Color(0, 0, 0));
        playerIconLabel.setForeground(new java.awt.Color(255, 255, 255));
        playerIconLabel.setText("jLabel1");

        javax.swing.GroupLayout PlayerInfoAndBasicButtonsPanelLayout = new javax.swing.GroupLayout(PlayerInfoAndBasicButtonsPanel);
        PlayerInfoAndBasicButtonsPanel.setLayout(PlayerInfoAndBasicButtonsPanelLayout);
        PlayerInfoAndBasicButtonsPanelLayout.setHorizontalGroup(
            PlayerInfoAndBasicButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerInfoAndBasicButtonsPanelLayout.createSequentialGroup()
                .addGroup(PlayerInfoAndBasicButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PlayerInfoAndBasicButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(inventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PlayerInfoAndBasicButtonsPanelLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addGroup(PlayerInfoAndBasicButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(saveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(upgradeMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(exitToMainMenuButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(staminaBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(healthBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayerInfoAndBasicButtonsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(playerIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        PlayerInfoAndBasicButtonsPanelLayout.setVerticalGroup(
            PlayerInfoAndBasicButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerInfoAndBasicButtonsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(healthBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(staminaBar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playerIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(upgradeMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitToMainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        LocationInfoPanel.setBackground(new java.awt.Color(0, 0, 0));

        locationImageLabel.setBackground(new java.awt.Color(0, 0, 0));
        locationImageLabel.setForeground(new java.awt.Color(255, 255, 255));

        LocationDescriptionScrollPane.setBackground(new java.awt.Color(0, 0, 0));
        LocationDescriptionScrollPane.setForeground(new java.awt.Color(0, 0, 0));

        locationDescriptionArea.setBackground(new java.awt.Color(0, 0, 0));
        locationDescriptionArea.setColumns(20);
        locationDescriptionArea.setFont(new java.awt.Font("Yu Mincho Light", 0, 18)); // NOI18N
        locationDescriptionArea.setForeground(new java.awt.Color(204, 204, 204));
        locationDescriptionArea.setLineWrap(true);
        locationDescriptionArea.setRows(5);
        locationDescriptionArea.setBorder(null);
        locationDescriptionArea.setCaretColor(new java.awt.Color(204, 204, 204));
        LocationDescriptionScrollPane.setViewportView(locationDescriptionArea);

        javax.swing.GroupLayout LocationInfoPanelLayout = new javax.swing.GroupLayout(LocationInfoPanel);
        LocationInfoPanel.setLayout(LocationInfoPanelLayout);
        LocationInfoPanelLayout.setHorizontalGroup(
            LocationInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LocationInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LocationInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(locationImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LocationDescriptionScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE))
                .addContainerGap())
        );
        LocationInfoPanelLayout.setVerticalGroup(
            LocationInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationInfoPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(locationImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LocationDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        NavigationPanel.setBackground(new java.awt.Color(0, 0, 0));

        previousFloorButton.setBackground(new java.awt.Color(51, 51, 51));
        previousFloorButton.setForeground(new java.awt.Color(255, 255, 255));
        previousFloorButton.setText("Предыдущий этаж");
        previousFloorButton.setBorder(null);
        previousFloorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousFloorButtonActionPerformed(evt);
            }
        });

        nextFloorButton.setBackground(new java.awt.Color(51, 51, 51));
        nextFloorButton.setForeground(new java.awt.Color(255, 255, 255));
        nextFloorButton.setText("Следующий этаж");
        nextFloorButton.setBorder(null);
        nextFloorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFloorButtonActionPerformed(evt);
            }
        });

        currentFloorLabel.setText("jLabel1");

        moveNorthButton.setBackground(new java.awt.Color(51, 51, 51));
        moveNorthButton.setForeground(new java.awt.Color(255, 255, 255));
        moveNorthButton.setText("🡹");
        moveNorthButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        moveNorthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveNorthButtonActionPerformed(evt);
            }
        });

        moveWestButton.setBackground(new java.awt.Color(51, 51, 51));
        moveWestButton.setForeground(new java.awt.Color(255, 255, 255));
        moveWestButton.setText("🡸");
        moveWestButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        moveWestButton.setPreferredSize(new java.awt.Dimension(75, 75));
        moveWestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveWestButtonActionPerformed(evt);
            }
        });

        moveEastButton.setBackground(new java.awt.Color(51, 51, 51));
        moveEastButton.setForeground(new java.awt.Color(255, 255, 255));
        moveEastButton.setText("🡺");
        moveEastButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        moveEastButton.setPreferredSize(new java.awt.Dimension(75, 75));
        moveEastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveEastButtonActionPerformed(evt);
            }
        });

        moveSouthButton.setBackground(new java.awt.Color(51, 51, 51));
        moveSouthButton.setForeground(new java.awt.Color(255, 255, 255));
        moveSouthButton.setText("🡻");
        moveSouthButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        moveSouthButton.setPreferredSize(new java.awt.Dimension(75, 75));
        moveSouthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveSouthButtonActionPerformed(evt);
            }
        });

        mapPanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout NavigationPanelLayout = new javax.swing.GroupLayout(NavigationPanel);
        NavigationPanel.setLayout(NavigationPanelLayout);
        NavigationPanelLayout.setHorizontalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(currentFloorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(moveSouthButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveNorthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NavigationPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NavigationPanelLayout.createSequentialGroup()
                        .addComponent(moveWestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(moveEastButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NavigationPanelLayout.createSequentialGroup()
                        .addComponent(previousFloorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nextFloorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NavigationPanelLayout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        NavigationPanelLayout.setVerticalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentFloorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(previousFloorButton, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                    .addComponent(nextFloorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(moveNorthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moveWestButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveEastButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(moveSouthButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PlayerInfoAndBasicButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LocationInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NavigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PlayerInfoAndBasicButtonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(LocationInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(NavigationPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitToMainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitToMainMenuButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitToMainMenuButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void nextFloorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFloorButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nextFloorButtonActionPerformed

    private void moveWestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveWestButtonActionPerformed
        GUIandLogicIntermediary.handlePLayerGoingWest();
    }//GEN-LAST:event_moveWestButtonActionPerformed

    private void moveNorthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveNorthButtonActionPerformed
        GUIandLogicIntermediary.handlePLayerGoingNorth();
    }//GEN-LAST:event_moveNorthButtonActionPerformed

    private void inventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryButtonActionPerformed

    private void upgradeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upgradeMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_upgradeMenuActionPerformed

    private void previousFloorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousFloorButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_previousFloorButtonActionPerformed

    private void moveEastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveEastButtonActionPerformed
        GUIandLogicIntermediary.handlePLayerGoingEast();
    }//GEN-LAST:event_moveEastButtonActionPerformed

    private void moveSouthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveSouthButtonActionPerformed
        GUIandLogicIntermediary.handlePLayerGoingSouth();
    }//GEN-LAST:event_moveSouthButtonActionPerformed

    public void updateLabels(){
        locationImageLabel.setIcon(new ImageIcon(Player.getInstance().getCurrentRoom().getRoomPictureSource()));
        locationDescriptionArea.setText(Player.getInstance().getCurrentRoom().getDescription());
        
        mapPanel.repaint();
        
        checkNavigationButtonsAvailability();
    }
    
    private void checkNavigationButtonsAvailability() {
        int floor = Player.getInstance().getCurrentRoom().getFloor();
        int x = Player.getInstance().getCurrentRoom().getX();
        int y = Player.getInstance().getCurrentRoom().getY();
        
        Room roomToEast = CastleMapGenerator.getRoomToEast(x, y, floor);
        Room roomToWest = CastleMapGenerator.getRoomToWest(x, y, floor);
        Room roomNorth = CastleMapGenerator.getRoomNorth(x, y, floor);
        Room roomSouth = CastleMapGenerator.getRoomSouth(x, y, floor);
        
        if(roomToEast == null){
            moveEastButton.setEnabled(false);
        } else {
            moveEastButton.setEnabled(true);
        }
        
        if(roomToWest == null){
            moveWestButton.setEnabled(false);
        } else {
            moveWestButton.setEnabled(true);
        }
        
        if(roomNorth == null){
            moveNorthButton.setEnabled(false);
        } else {
            moveNorthButton.setEnabled(true);
        }
        
        if(roomSouth == null){
            moveSouthButton.setEnabled(false);
        } else {
            moveSouthButton.setEnabled(true);
        }
    }
    
//    protected void paintComponent(Graphics g) {
//        super.paintComponent(g);
//
//        Room currentRoom = Player.getInstance().getCurrentRoom();
//        int currentFloorNumber = currentRoom.getFloor();
//        Floor floor = CastleMapGenerator.getFloors().get(currentFloorNumber - 1);
//        Room[][] rooms = floor.getRooms();
//
//        final int ROOM_SIZE = 30;
//        final int GAP = 10;
//
//        // Сначала отрисуем соединения между посещёнными комнатами
//        g.setColor(Color.GRAY);
//        for (int x = 0; x < floor.getWidth(); x++) {
//            for (int y = 0; y < floor.getHeight(); y++) {
//                Room room = rooms[x][y];
//                if (room == null || !room.isVisited()) continue;
//
//                int startX = x * (ROOM_SIZE + GAP) + ROOM_SIZE / 2;
//                int startY = y * (ROOM_SIZE + GAP) + ROOM_SIZE / 2;
//
//                for (Room connected : room.getConnections()) {
//                    if (!connected.isVisited()) continue;
//
//                    int endX = connected.getX() * (ROOM_SIZE + GAP) + ROOM_SIZE / 2;
//                    int endY = connected.getY() * (ROOM_SIZE + GAP) + ROOM_SIZE / 2;
//
//                    g.drawLine(startX, startY, endX, endY);
//                }
//            }
//        }
//
//        // Теперь отрисуем сами комнаты
//        for (int x = 0; x < floor.getWidth(); x++) {
//            for (int y = 0; y < floor.getHeight(); y++) {
//                Room room = rooms[x][y];
//                if (room == null || !room.isVisited()) continue;
//
//                int drawX = x * (ROOM_SIZE + GAP);
//                int drawY = y * (ROOM_SIZE + GAP);
//
//                // Цвет текущей комнаты
//                if (room == currentRoom) {
//                    g.setColor(Color.RED);
//                } else {
//                    g.setColor(Color.LIGHT_GRAY);
//                }
//
//                g.fillRect(drawX, drawY, ROOM_SIZE, ROOM_SIZE);
//                g.setColor(Color.BLACK);
//                g.drawRect(drawX, drawY, ROOM_SIZE, ROOM_SIZE);
//
//                // Первая буква типа комнаты
//                g.drawString(room.getType().name().substring(0, 1), drawX + 10, drawY + 20);
//            }
//        }
//    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane LocationDescriptionScrollPane;
    private javax.swing.JPanel LocationInfoPanel;
    private javax.swing.JPanel NavigationPanel;
    private javax.swing.JPanel PlayerInfoAndBasicButtonsPanel;
    private javax.swing.JLabel currentFloorLabel;
    private javax.swing.JButton exitToMainMenuButton;
    private javax.swing.JProgressBar healthBar;
    private javax.swing.JButton inventoryButton;
    private javax.swing.JTextArea locationDescriptionArea;
    private javax.swing.JLabel locationImageLabel;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JButton moveEastButton;
    private javax.swing.JButton moveNorthButton;
    private javax.swing.JButton moveSouthButton;
    private javax.swing.JButton moveWestButton;
    private javax.swing.JButton nextFloorButton;
    private javax.swing.JLabel playerIconLabel;
    private javax.swing.JButton previousFloorButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JProgressBar staminaBar;
    private javax.swing.JButton upgradeMenu;
    // End of variables declaration//GEN-END:variables

}
